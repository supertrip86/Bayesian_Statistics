set.seed(123)
# Load the provided data
load("homework_1.RData")
# Select the desired subset
mydata <- subset(roma,subset=sign_up_number==104)
# check the content within the subset
str(mydata)
mydata
barplot(height = mydata$car_accidents, names = mydata$week, xlab = "week number", ylab = "# car accidents", main = "Distribution of car accidents for some given weeks of the Year 2016")
summary(mydata)
summary(mydata$car_accidents)
sd(mydata$car_accidents)
prior_mean = 3.22
number_of_options <- 30
step <- 3
my_indexes <- seq(1, number_of_options, step)
my_vec <- prior_mean * my_indexes
my_vec
curve(
dgamma(x, shape = my_vec[1], rate = my_indexes[1]),
col = 1,
lwd = 3,
xlab = expression(theta),
ylab = expression(pi(theta)),
main = "Candidate Prior Distributions",
ylim = c(0, 1.2),
from = 0,
to = 8
)
for (i in 2:length(my_vec)){
curve(dgamma(x, shape = my_vec[i], rate = my_indexes[i]), add = T, col = i, lwd = 3)
}
abline(v = prior_mean, col="purple", lwd=3, lty=2)
axis(1, at = prior_mean, labels = prior_mean)
prior_shape <- 51.52
prior_rate <- 16
curve(
dgamma(x, shape = prior_shape, rate = prior_rate),
lwd = 3,
col = "red",
xlab = expression(theta),
ylab = expression(pi(theta)),
main = "Chosen Prior Distributions",
ylim = c(0, 0.9),
from = 0,
to = 8
)
abline(v = prior_mean, col="green", lwd=3, lty=2)
axis(1, at = prior_mean, labels = prior_mean)
posterior_shape <- prior_shape + sum(mydata$car_accidents)
posterior_rate <- prior_rate + length(mydata$car_accidents)
posterior_rate
posterior_shape
posterio_mean <- posterior_shape / posterior_rate
posterior_median <- qgamma(0.5, shape = posterior_shape, rate = posterior_rate)
posterior_mode <- (posterior_shape - 1) / posterior_rate
posterio_mean
posterior_median
posterior_mode
posterior_variance <- posterior_shape / (posterior_rate^2)
posterior_variance
posterior_coefficient_variation <- sqrt(posterior_variance) / posterio_mean
sprintf("%0.1f%%", posterior_coefficient_variation * 100)
interval_size <- 0.95
interval_bounds <- c( (1 - interval_size) / 2, 1 - (1 - interval_size) / 2)
interval_bounds
qb_interval <- qgamma(interval_bounds, shape = posterior_shape, rate = posterior_rate)
qb_interval
# we make use of the HDInterval package to calculate the Highest Posterior Density Interval
# install.packages("HDInterval")  # remove this comment in case the library "HDInterval" is not installed
library(HDInterval)
hpd_interval <- hdi(qgamma, shape = posterior_shape, rate = posterior_rate, credMass = interval_size)
c(hpd_interval[1], hpd_interval[2])
hpd_result <- c(as.numeric(hpd_interval[1]), as.numeric(hpd_interval[2]))
qb_amplitude <- qb_interval[2] - qb_interval[1]
hpd_amplitude <- hpd_result[2] - hpd_result[1]
hpd_amplitude < qb_amplitude
curve(
dgamma(x, shape = prior_shape, rate = prior_rate),
lwd = 3,
col = "red",
xlab = expression(theta),
ylab = expression(pi(theta)),
main = "Prior and Posterior density functions",
ylim = c(0, 1.3),
from = 0,
to = 8
)
curve(
dgamma(x, shape = posterior_shape, rate = posterior_rate),
lwd = 3,
col = "purple",
add = T
)
legend("topright", legend=c("Prior Distribution","Posterior Distribution"), col=c("red", "purple"), pt.cex=2, pch=15 )
abline(v = prior_mean, col="green", lwd=3, lty=2)
axis(1, at = prior_mean, labels = prior_mean)
round(mean(mydata$car_accidents), 2)
n <- 10000
ppd <- rnbinom(n, size = posterior_shape, mu = posterio_mean)
hist(
mydata$car_accidents,
col = "green",
probability = T,
main = "Comparison between Observed and Predicted data",
xlim = c(0, 10),
ylim = c(0, 0.35),
xlab = "# collisions",
ylab = "Probability"
)
hist(ppd, col = "red", probability = T, add = T)
legend("topright", legend=c("Observed Data","Predicted Data"), col=c("green", "red"), pt.cex=2, pch=15 )
shape <- 3.0071166
rate <- 1002.3722
curve(
dgamma(x, shape = shape, rate = rate),
xlab = expression(theta),
ylab = expression(pi(theta)),
col = "red",
lwd = 3,
main = "Prior distribution density",
from = 0,
to = 0.01
)
mu <- 0.003
std <- 0.00173
CV <- std / mu
sprintf("%0.1f%%", CV * 100)
hpd <- hdi(qgamma, shape = shape, rate = rate, credMass = interval_size)
curve(
dgamma(x, shape = shape, rate = rate),
xlab = expression(theta),
ylab = expression(pi(theta)),
col = "red",
lwd = 3,
main = "Prior distribution density",
from = 0,
to = 0.01
)
abline(v = hpd[1], col="green", lwd=3, lty=2)
axis(1, at = hpd[1], labels = "0.0003", pos = 2)
abline(v = hpd[2], col="purple", lwd=3, lty=2)
axis(1, at = hpd[2], labels = round(hpd[2], 4), pos = 2)
lb_data <- c(1, 13, 27, 43, 73, 75, 154, 196, 220, 297, 344, 610, 734, 783, 796, 845, 859, 992, 1066, 1471)
n <- length(lb_data)
posterior_shape = shape + n
posterior_rate = rate + sum(lb_data)
posterior_shape
posterior_rate
posterior_mean <- posterior_shape / posterior_rate
posterior_mode <- qgamma(0.5, shape = posterior_shape, rate = posterior_rate)
posterior_median <- (posterior_shape - 1) / posterior_rate
posterior_variance <- posterior_shape / (posterior_rate^2)
posterior_std <- sqrt(posterior_variance)
posterior_mean
posterior_mode
posterior_median
posterior_std
curve(
dgamma(x, shape = shape, rate = rate),
col="red",
lwd=3,
xlab=expression(theta)
,ylab=expression(pi(theta)),
ylim=c(0,920),
xlim=c(0,0.008),
main="Comparison between Prior and Posterior density"
)
curve(
dgamma(x, shape = posterior_shape, rate = posterior_rate),
col="purple",
lwd=3,
add=T
)
legend(
"topright",
legend=c("Prior density", "Posterior density"),
col=c("red", "purple"),
pt.cex=2,
pch=15
)
abline(v = mu, col="red", lwd=3, lty=2)
axis(1, at = mu, labels = round(mu, 4), pos = 2)
abline(v = posterior_mean, col="purple", lwd=3, lty=2)
axis(1, at = posterior_mean, labels = round(posterior_mean, 4), pos = 2)
lb_mean <- 1 / posterior_mean
lb_mean
theta <- 1 / 550
prob <- pgamma(theta, shape = posterior_shape, rate = posterior_rate)
prob
